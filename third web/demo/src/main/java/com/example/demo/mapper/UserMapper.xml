<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.UserMapper">
  <!--查找用户名-->
<!--  <select id="findUserName" resultType="com.example.demo.entity.User">-->
<!--        select *-->
<!--        from t_user-->
<!--        where account = #{account}-->
<!--    </select>-->

<!--  &lt;!&ndash;查找账号密码&ndash;&gt;-->
<!--  <select id="findPassword" resultType="String">-->
<!--        select password-->
<!--        from t_user-->
<!--        where account = #{account}-->
<!--    </select>-->
      <resultMap id="BaseResultMap" type="com.example.demo.entity.User">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="account" jdbcType="VARCHAR" property="account" />
        <result column="nickname" jdbcType="VARCHAR" property="nickname" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="type" jdbcType="INTEGER" property="type" />
        <result column="question" jdbcType="VARCHAR" property="question" />
        <result column="answer" jdbcType="VARCHAR" property="answer" />
        <result column="headimg" jdbcType="VARCHAR" property="headimg" />
          <result column="followNum" jdbcType="INTEGER" property="followNum" />
          <result column="fansNum" jdbcType="INTEGER" property="fansNum" />
          <result column="scanNum" jdbcType="INTEGER" property="scanNum" />
          <result column="isFollow" jdbcType="INTEGER" property="isFollow"/>
      </resultMap>

<!--查找用户的用户名和密码，实现登录-->
    <select id="loginPage" parameterType="String" resultMap="BaseResultMap">
        select account
        from t_user
        where account = #{account} and password = #{password}
    </select>
<!--    查找用户的用户类型，用于判断是超级管理员还是普通管理员-->
    <select id="userType" parameterType="String" resultMap="BaseResultMap">
        select type
        from t_user
        where account = #{account} and password = #{password}
    </select>
    <select id="selectUserMsg"
            parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, nickname,
		account,
		password, question, answer, headimg, type,
		(select count(id) from t_follow where followId=#{id}) as followNum,
		(select count(id) from t_follow where beFollowId=#{id})	as fansNum,
		(select count(id) from t_scan where uid=#{id})as scanNum,
		(select count(id) from t_follow where beFollowId=#{id} and followId=#{myUid})as isFollow
		from t_user
		where id =
		#{id,jdbcType=INTEGER}
	</select>
<!--    <insert id="addUser" parameterType="com.example.demo.entity.User">-->
<!--    insert into t_user (account, nickname,-->
<!--      password, type)-->
<!--    values (#{account}, #{nickname},-->
<!--      #{password}, #{type})-->
<!--    </insert>-->
    <select id="selectByName" resultMap="BaseResultMap">
		select id, nickname,
		account,
		password, question, answer, headimg, type
		from t_user
		where
		account = #{account}
	</select>
    <select id="selectAllByTypeCount" resultType="int">
		select count(id)
		from t_user where type=#{type}
	</select>
    <select id="selectAllByType" resultMap="BaseResultMap">
		select id, nickname,
		account,
		password, question, answer, headimg, type
		from t_user
		where
		type=#{type}
		order by id desc
		limit #{start},#{size}
	</select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select id, account, nickname, password, type, question, answer, headimg,
        (select count(id) from t_follow where followId=#{id}) as followNum,
		(select count(id) from t_follow where beFollowId=#{id})	as fansNum,
		(select count(id) from t_scan where uid=#{id})as scanNum
        from t_user
        where id = #{id,jdbcType=INTEGER}
    </select>
    <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">
        update t_user
        set account = #{account,jdbcType=VARCHAR},
          nickname = #{nickname,jdbcType=VARCHAR},
          question = #{question,jdbcType=VARCHAR},
          answer = #{answer,jdbcType=VARCHAR},
          headimg = #{headimg,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.example.demo.entity.User">
        insert into t_user (id, account, nickname,
          password, type, question,
          answer, headimg)
        values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},
          #{password,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR},
          #{answer,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR})
    </insert>
    <update id="editUserPassword"
            parameterType="com.example.demo.entity.User">
		update t_user
		set
		password =
		#{password,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>

<!--    <insert id="addUser" parameterType="com.example.demo.entity.User">-->
<!--    insert into t_user (id, account, nickname,-->
<!--      password, type, question,-->
<!--      answer, headimg)-->
<!--    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR},-->
<!--      #{password,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR},-->
<!--      #{answer,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR})-->
<!--    </insert>-->
<!--    <select id="selectByName" resultMap="com.example.demo.entity.User">-->
<!--		select id, nickname,-->
<!--		account,-->
<!--		password, question, answer, headimg, type-->
<!--		from t_user-->
<!--		where-->
<!--		account = #{account}-->
<!--	</select>-->

<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    delete from t_user-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </delete>-->

<!--  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">-->
<!--    update t_user-->
<!--    set account = #{account,jdbcType=VARCHAR},-->
<!--      nickname = #{nickname,jdbcType=VARCHAR},-->
<!--      password = #{password,jdbcType=VARCHAR},-->
<!--      type = #{type,jdbcType=INTEGER},-->
<!--      question = #{question,jdbcType=VARCHAR},-->
<!--      answer = #{answer,jdbcType=VARCHAR},-->
<!--      headimg = #{headimg,jdbcType=VARCHAR}-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
<!--    select id, account, nickname, password, type, question, answer, headimg-->
<!--    from t_user-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </select>-->
<!--  <select id="selectAll" resultMap="BaseResultMap">-->
<!--    select id, account, nickname, password, type, question, answer, headimg-->
<!--    from t_user-->
<!--  </select>-->
<!--  <resultMap id="BaseResultMap" type="com.example.demo.entity.User">-->
<!--    <id column="id" jdbcType="INTEGER" property="id" />-->
<!--    <result column="account" jdbcType="VARCHAR" property="account" />-->
<!--    <result column="nickname" jdbcType="VARCHAR" property="nickname" />-->
<!--    <result column="password" jdbcType="VARCHAR" property="password" />-->
<!--    <result column="type" jdbcType="INTEGER" property="type" />-->
<!--    <result column="question" jdbcType="VARCHAR" property="question" />-->
<!--    <result column="answer" jdbcType="VARCHAR" property="answer" />-->
<!--    <result column="headimg" jdbcType="VARCHAR" property="headimg" />-->
<!--  </resultMap>-->
<!--  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">-->
<!--    delete from t_user-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </delete>-->
<!--  <insert id="insert" parameterType="com.example.demo.entity.User">-->
<!--    insert into t_user (id, account, nickname, -->
<!--      password, type, question, -->
<!--      answer, headimg)-->
<!--    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, -->
<!--      #{password,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{question,jdbcType=VARCHAR}, -->
<!--      #{answer,jdbcType=VARCHAR}, #{headimg,jdbcType=VARCHAR})-->
<!--  </insert>-->
<!--  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.User">-->
<!--    update t_user-->
<!--    set account = #{account,jdbcType=VARCHAR},-->
<!--      nickname = #{nickname,jdbcType=VARCHAR},-->
<!--      password = #{password,jdbcType=VARCHAR},-->
<!--      type = #{type,jdbcType=INTEGER},-->
<!--      question = #{question,jdbcType=VARCHAR},-->
<!--      answer = #{answer,jdbcType=VARCHAR},-->
<!--      headimg = #{headimg,jdbcType=VARCHAR}-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </update>-->
<!--  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">-->
<!--    select id, account, nickname, password, type, question, answer, headimg-->
<!--    from t_user-->
<!--    where id = #{id,jdbcType=INTEGER}-->
<!--  </select>-->
<!--  <select id="selectAll" resultMap="BaseResultMap">-->
<!--    select id, account, nickname, password, type, question, answer, headimg-->
<!--    from t_user-->
<!--  </select>-->
</mapper>